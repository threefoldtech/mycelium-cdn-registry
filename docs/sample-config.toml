# Sample configuration file for mycdnctl
# Save this as config.toml and modify as needed

# Number of shards required to recover the data (minimum)
# This should be less than the total number of 0-DB instances
required_shards = 3

# List of 0-DB instances to store shards
# One shard is sent to each instance in this list
# Multiple instances provide both redundancy and geo-aware loading

# Region 1: Europe
[[zdbs]]
host = "eu-west.0db.example.com:9900"  # IP address and port of the 0-DB instance
namespace = "mycelium"                 # Namespace to use in the 0-DB
secret = "password1"                   # Optional password for the namespace

# Region 2: North America
[[zdbs]]
host = "us-east.0db.example.com:9900"
namespace = "mycelium"
secret = "password2"

# Region 3: Asia
[[zdbs]]
host = "asia-east.0db.example.com:9900"
namespace = "mycelium"
secret = "password3"

# Region 4: Australia
[[zdbs]]
host = "au-east.0db.example.com:9900"
namespace = "mycelium"
secret = "password4"

# Region 5: South America
[[zdbs]]
host = "sa-east.0db.example.com:9900"
namespace = "mycelium"
secret = "password5"

# Notes:
# 1. The total number of 0-DB instances should be greater than required_shards
#    to provide redundancy. For example, if required_shards = 3 and you have 5
#    instances, you can lose up to 2 instances and still recover the data.
#
# 2. Distributing 0-DB instances across different geographic regions enables
#    geo-aware loading in Mycelium CDN, which improves performance by retrieving
#    shards from the closest available instances to the user.
#
# 3. Each 0-DB instance should have a unique host address.
#
# 4. The namespace must exist on each 0-DB instance before uploading.
#
# 5. If the namespace requires authentication, provide the secret.
#    If the namespace is public, you can omit the secret or set it to null.
#
# 6. When uploading with --include-password, the secrets will be included in
#    the metadata, which allows clients to access private namespaces. However,
#    this also means anyone with the metadata can access your 0-DB namespaces.